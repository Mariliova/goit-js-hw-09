{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAgBC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MACnCJ,EAAAc,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,MAAK,CAC9Da,SAAO,G,CAIb,SAASC,EAAgBL,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MACnCJ,EAAAc,OAAOK,QAAQ,sBAAqCH,OAAfb,EAAS,QAAYa,OAANZ,EAAM,MAAK,CAC7Da,SAAS,G,CAnDbjB,EAAAc,OAAOM,KAAK,IAEC,CACXC,KAAMC,SAASC,cAAc,UAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAKF,IAHA,IAAqCC,EAWvC,SAAmBF,GACjB,MAAO,CACLG,WAAYC,OAAOJ,EAAEK,cAAcC,SAAS3B,MAAM4B,OAClDC,KAAMJ,OAAOJ,EAAEK,cAAcC,SAASE,KAAKD,OAC3CE,OAAQL,OAAOJ,EAAEK,cAAcC,SAASG,OAAOF,O,CAfZG,CAAUV,GAAvCG,EAA6BD,EAA7BC,WAAYK,EAAiBN,EAAjBM,KAAMC,EAAWP,EAAXO,OACtB9B,EAAQwB,EAEHzB,EAAW,EAAGA,GAAY+B,EAAQ/B,GAAY,EACrDD,EAAcC,EAAUC,GACrBgC,MAAK,SAAAC,G,OAAQzB,EAAgByB,E,IAC7BC,OAAM,SAAAD,G,OAAQnB,EAAgBmB,E,IACjCjC,GAAS6B,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nNotify.init({});\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const { firstDelay, step, amount } = getValues(e);\n  let delay = firstDelay;\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(data => notifyOnSuccess(data))\n      .catch(data => notifyOnFailure(data));\n    delay += step;\n  }\n}\n\nfunction getValues(e) {\n  return {\n    firstDelay: Number(e.currentTarget.elements.delay.value),\n    step: Number(e.currentTarget.elements.step.value),\n    amount: Number(e.currentTarget.elements.amount.value),\n  };\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction notifyOnSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    useIcon: false,\n  });\n}\n\nfunction notifyOnFailure({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    useIcon: false,\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$notifyOnSuccess","param","Notify","success","concat","useIcon","$ce04d3a99e08e73b$var$notifyOnFailure","failure","init","form","document","querySelector","addEventListener","e","preventDefault","ref","firstDelay","Number","currentTarget","elements","value","step","amount","$ce04d3a99e08e73b$var$getValues","then","data","catch"],"version":3,"file":"03-promises.879c4b99.js.map"}